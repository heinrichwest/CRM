@page "/users"
@using CRM.Models
@inject CRM.Services.UserService userService

<h1>Users</h1>

<EditForm Model="editUser" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <InputText @bind-Value="editUser.FirstName" class="form-control" placeholder="First Name" />
    </div>
    <div class="mb-3">
        <InputText @bind-Value="editUser.LastName" class="form-control" placeholder="Last Name" />
    </div>
    <div class="mb-3">
        <InputText @bind-Value="editUser.Email" class="form-control" placeholder="Email" />
    </div>
    <div class="mb-3">
        <InputText @bind-Value="editUser.Phone" class="form-control" placeholder="Phone" />
    </div>
    <div class="mb-3">
        <InputText @bind-Value="editUser.Address" class="form-control" placeholder="Address" />
    </div>
    <div class="mb-3">
        <InputSelect @bind-Value="editUser.Role" class="form-control">
            <option value="Learner">Learner</option>
            <option value="Admin">Admin</option>
        </InputSelect>
    </div>
    <button type="submit" class="btn btn-primary me-2">@submitText</button>
    @if (isEditing)
    {
        <button type="button" class="btn btn-secondary" @onclick="CancelEdit">Cancel</button>
    }
</EditForm>

<table class="table mt-4">
    <thead>
        <tr>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Address</th>
            <th>Role</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var u in users)
        {
            <tr>
                <td>@u.FirstName</td>
                <td>@u.LastName</td>
                <td>@u.Email</td>
                <td>@u.Phone</td>
                <td>@u.Address</td>
                <td>@u.Role</td>
                <td>
                    <button class="btn btn-sm btn-secondary me-1" @onclick="() => Edit(u)">Edit</button>
                    <button class="btn btn-sm btn-danger" @onclick="() => Delete(u.Id)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<User> users = new();
    private User editUser = new();
    private bool isEditing;

    protected override void OnInitialized()
    {
        users = userService.GetUsers().ToList();
    }

    private string submitText => isEditing ? "Update" : "Add";

    private void HandleSubmit()
    {
        if (isEditing)
        {
            userService.UpdateUser(editUser);
        }
        else
        {
            userService.AddUser(new User
            {
                FirstName = editUser.FirstName,
                LastName = editUser.LastName,
                Email = editUser.Email,
                Phone = editUser.Phone,
                Address = editUser.Address,
                Role = editUser.Role
            });
        }
        ResetForm();
    }

    private void Edit(User user)
    {
        editUser = new User
        {
            Id = user.Id,
            FirstName = user.FirstName,
            LastName = user.LastName,
            Email = user.Email,
            Phone = user.Phone,
            Address = user.Address,
            Role = user.Role
        };
        isEditing = true;
    }

    private void Delete(int id)
    {
        userService.DeleteUser(id);
        ResetForm();
    }

    private void CancelEdit()
    {
        ResetForm();
    }

    private void ResetForm()
    {
        editUser = new User();
        isEditing = false;
        users = userService.GetUsers().ToList();
        StateHasChanged();
    }
}
