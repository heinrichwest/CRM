@page "/users"
@using CRM.Models
@inject CRM.Services.UserService userService

<MudText Typo="Typo.h4">Users</MudText>

<EditForm Model="editUser" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <MudTextField Class="mb-3" @bind-Value="editUser.FirstName" Label="First Name" />
    <MudTextField Class="mb-3" @bind-Value="editUser.LastName" Label="Last Name" />
    <MudTextField Class="mb-3" @bind-Value="editUser.Email" Label="Email" />
    <MudTextField Class="mb-3" @bind-Value="editUser.Phone" Label="Phone" />
    <MudTextField Class="mb-3" @bind-Value="editUser.Address" Label="Address" />
    <MudButton Type="Submit" Color="Color.Primary" Class="me-2">@submitText</MudButton>
    @if (isEditing)
    {
        <MudButton OnClick="CancelEdit" Color="Color.Secondary">Cancel</MudButton>
    }
</EditForm>

<MudTable Items="users" Class="mt-4">
    <HeaderContent>
        <MudTh>First Name</MudTh>
        <MudTh>Last Name</MudTh>
        <MudTh>Email</MudTh>
        <MudTh>Phone</MudTh>
        <MudTh>Address</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="First Name">@context.FirstName</MudTd>
        <MudTd DataLabel="Last Name">@context.LastName</MudTd>
        <MudTd DataLabel="Email">@context.Email</MudTd>
        <MudTd DataLabel="Phone">@context.Phone</MudTd>
        <MudTd DataLabel="Address">@context.Address</MudTd>
        <MudTd>
            <MudButton Variant="Variant.Text" Color="Color.Secondary" Size="Size.Small" Class="me-1" OnClick="() => Edit(context)">Edit</MudButton>
            <MudButton Variant="Variant.Text" Color="Color.Error" Size="Size.Small" OnClick="() => Delete(context.Id)">Delete</MudButton>
        </MudTd>
    </RowTemplate>
</MudTable>

@code {
    private List<User> users = new();
    private User editUser = new();
    private bool isEditing;

    protected override void OnInitialized()
    {
        users = userService.GetUsers().ToList();
    }

    private string submitText => isEditing ? "Update" : "Add";

    private void HandleSubmit()
    {
        if (isEditing)
        {
            userService.UpdateUser(editUser);
        }
        else
        {
            userService.AddUser(new User
            {
                FirstName = editUser.FirstName,
                LastName = editUser.LastName,
                Email = editUser.Email,
                Phone = editUser.Phone,
                Address = editUser.Address
            });
        }
        ResetForm();
    }

    private void Edit(User user)
    {
        editUser = new User
        {
            Id = user.Id,
            FirstName = user.FirstName,
            LastName = user.LastName,
            Email = user.Email,
            Phone = user.Phone,
            Address = user.Address
        };
        isEditing = true;
    }

    private void Delete(int id)
    {
        userService.DeleteUser(id);
        ResetForm();
    }

    private void CancelEdit()
    {
        ResetForm();
    }

    private void ResetForm()
    {
        editUser = new User();
        isEditing = false;
        users = userService.GetUsers().ToList();
        StateHasChanged();
    }
}
