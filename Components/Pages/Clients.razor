@page "/clients"
@using CRM.Models
@inject CRM.Services.ClientService clientService

<MudText Typo="Typo.h4">Clients</MudText>

<EditForm Model="editClient" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <MudTextField Class="mb-3" @bind-Value="editClient.Name" Label="Name" />
    <MudTextField Class="mb-3" @bind-Value="editClient.Email" Label="Email" />
    <MudTextField Class="mb-3" @bind-Value="editClient.CompanyName" Label="Company Name" />
    <MudTextField Class="mb-3" @bind-Value="editClient.CompanyWebsite" Label="Company Website" />
    <MudTextField Class="mb-3" @bind-Value="editClient.ContactNumber" Label="Contact Number" />
    <MudTextField Class="mb-3" @bind-Value="editClient.LastFeedback" Label="Last Feedback" />
    <MudButton Type="Submit" Color="Color.Primary" Class="me-2">@submitText</MudButton>
    @if (isEditing)
    {
        <MudButton OnClick="CancelEdit" Color="Color.Secondary">Cancel</MudButton>
    }
</EditForm>

<MudTable Items="clients" Class="mt-4">
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Email</MudTh>
        <MudTh>Company Name</MudTh>
        <MudTh>Website</MudTh>
        <MudTh>Contact Number</MudTh>
        <MudTh>Last Feedback</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Email">@context.Email</MudTd>
        <MudTd DataLabel="Company Name">@context.CompanyName</MudTd>
        <MudTd DataLabel="Website">@context.CompanyWebsite</MudTd>
        <MudTd DataLabel="Contact Number">@context.ContactNumber</MudTd>
        <MudTd DataLabel="Last Feedback">@context.LastFeedback</MudTd>
        <MudTd>
            <MudButton Variant="Variant.Text" Color="Color.Secondary" Size="Size.Small" Class="me-1" OnClick="() => Edit(context)">Edit</MudButton>
            <MudButton Variant="Variant.Text" Color="Color.Error" Size="Size.Small" OnClick="() => Delete(context.Id)">Delete</MudButton>
        </MudTd>
    </RowTemplate>
</MudTable>

@code {
    private List<Client> clients = new();
    private Client editClient = new();
    private bool isEditing;

    protected override void OnInitialized()
    {
        clients = clientService.GetClients().ToList();
    }

    private string submitText => isEditing ? "Update" : "Add";

    private void HandleSubmit()
    {
        if (isEditing)
        {
            clientService.UpdateClient(editClient);
        }
        else
        {
            clientService.AddClient(new Client
            {
                Name = editClient.Name,
                Email = editClient.Email,
                CompanyName = editClient.CompanyName,
                CompanyWebsite = editClient.CompanyWebsite,
                ContactNumber = editClient.ContactNumber,
                LastFeedback = editClient.LastFeedback
            });
        }
        ResetForm();
    }

    private void Edit(Client client)
    {
        editClient = new Client
        {
            Id = client.Id,
            Name = client.Name,
            Email = client.Email,
            CompanyName = client.CompanyName,
            CompanyWebsite = client.CompanyWebsite,
            ContactNumber = client.ContactNumber,
            LastFeedback = client.LastFeedback
        };
        isEditing = true;
    }

    private void Delete(int id)
    {
        clientService.DeleteClient(id);
        ResetForm();
    }

    private void CancelEdit()
    {
        ResetForm();
    }

    private void ResetForm()
    {
        editClient = new Client();
        isEditing = false;
        clients = clientService.GetClients().ToList();
        StateHasChanged();
    }
}
